SIGNALS:
Here follows a list of supported signals and their meaning. If a signal is
not being properly delivered to the daemon, and this is on a system running
SELinux, check for SELinux interferences.


Core process:
SIGCHLD:	used to handle gracefully his loved child processes. This is
		internal, ie. should not be sent by users. To end gracefully
		the daemon, look at SIGINT;
SIGHUP:         reopens the logging infrastructure. Works with both syslog and
		logfiles; it also works with streamed logging of BGP messages/
		events (bgp_daemon_msglog_file), streamed logging of BMP data/
		stats/events (bmp_daemon_msglog_file) and streamed logging of
		sFlow counters (sfacctd_counter_file); 
SIGUSR1:        returns various statistics via either console or syslog; the
		syslog level used is NOTICE; the facility is selected through
		configuration (ie. key 'syslog'). The feature works for all
		daemons;
SIGUSR2:	if 'maps_refresh' config directive is enabled, it causes maps
		to be reloaded (ie. pre_tag_map, bgp_agent_map, etc.). If also
		indexing is enabled, ie. maps_index, indexes are re-compited. 
SIGINT:		the signal is used by the Core Process itself and propagated
		to each running plugin for graceful termination (ie. send BGP
		NOTIFICATION message to established BGP sessions, close open
		files, remove PID files, purge data, etc.). See Q16 of the
		FAQS document for recommendations on how to best send SIGINT
		signals to the daemon;
SIGTERM:	not handled (which means it follows the default behaviour for
		the OS) if the daemon is started in background; otherwise it 
		orks like SIGINT;
SIGPIPE:	ignored;

Plugin (SQL, noSQL, memory, print, tee, probes, etc.) processes:
SIGPIPE:	ignored;
SIGCHLD:	ignored;
SIGHUP:		reopens the logging infrastructure. Works with both syslog and
                logfiles;	
SIGUSR1:	ignored;
SIGUSR2:        if 'maps_refresh' configuration directive is enabled it causes
		Ports and Networks maps to be reloaded;
SIGINT:		causes the process to exit gracefully;	
